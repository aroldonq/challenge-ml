name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest
  
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS github credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: sa-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY  }}
        IMAGE_TAG: qa

      run: |
        # Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG  

    -   name: Install AWS CLI v2
        run:  |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o /tmp/awscliv2.zip
          unzip -q /tmp/awscliv2.zip -d /tmp
          rm /tmp/awscliv2.zip
          sudo /tmp/aws/install --update
          rm -rf /tmp/aws/

    - name: Delete the <untagged> Amazon ECR
      env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY  }}
      run: |
          imageIds=$(aws ecr list-images --repository-name $ECR_REPOSITORY --filter tagStatus=UNTAGGED --query 'imageIds[*]' --output json  | jq -r '[.[].imageDigest] | map("imageDigest="+.) | join (" ")')
          if [[ "$imageIds" == "" ]]; then 
              echo 'Image not found'
          else 
              aws ecr batch-delete-image --repository-name $ECR_REPOSITORY --image-ids $imageIds
          fi
 
  deploy:

     needs: build
     runs-on: ubuntu-latest
    
     steps:
        - name: Start and Deploy in EC2
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOSTNAME  }}
            username: ${{ secrets.USER_NAME  }}
            key: ${{ secrets.AWS_PRIVATE_KEY }}
            port: ${{ secrets.PORT }}
            script: 'sudo microk8s kubectl rollout restart deployment ${{ secrets.ECR_REPOSITORY  }} -n ${{ secrets.ECR_REPOSITORY  }}'


        - name: Delete the <untagged> Amazon ECR
          env:
            ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY  }}
          run: |
            imageIds=$(aws ecr list-images --repository-name $ECR_REPOSITORY --filter tagStatus=UNTAGGED --query 'imageIds[*]' --output json  | jq -r '[.[].imageDigest] | map("imageDigest="+.) | join (" ")')
            if [[ "$imageIds" == "" ]]; then 
                echo 'Image not found'
            else 
                aws ecr batch-delete-image --repository-name $ECR_REPOSITORY --image-ids $imageIds
            fi

        - name: Log out of Amazon ECR
          if: always()
          run: docker logout ${{ steps.login-ecr.outputs.registry }}